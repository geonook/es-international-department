#!/usr/bin/env ts-node

/**
 * Initialize Department Resource Categories
 * ÂàùÂßãÂåñÈÉ®ÈñÄË≥áÊ∫êÂàÜÈ°û
 */

import { PrismaClient } from '@prisma/client'

const prisma = new PrismaClient()

const departmentCategories = [
  {
    name: 'academic-affairs',
    displayName: 'Â≠∏ÂãôËôïÊñáÊ™î',
    description: 'Â≠∏ÂãôËôïÁõ∏ÈóúÊîøÁ≠ñ„ÄÅË°®Ê†º„ÄÅÈÄöÁü•ËàáÁÆ°ÁêÜÊñáÊ™î',
    icon: 'GraduationCap',
    color: '#2563eb',
    sortOrder: 1
  },
  {
    name: 'foreign-affairs',
    displayName: 'Â§ñ‰∫ãËôïÊñáÊ™î',
    description: 'Â§ñ‰∫ãËôïÂúãÈöõ‰∫§ÊµÅ„ÄÅÁ∞ΩË≠â„ÄÅÊµ∑Â§ñÊ¥ªÂãïÁõ∏ÈóúÊñáÊ™î',
    icon: 'Globe',
    color: '#059669',
    sortOrder: 2
  },
  {
    name: 'classroom-affairs',
    displayName: 'ÊïôÂãôËôïÊñáÊ™î',
    description: 'ÊïôÂãôËôïË™≤Á®ãÂÆâÊéí„ÄÅÊïôÂ≠∏ÁÆ°ÁêÜ„ÄÅË©ïÈáèÁõ∏ÈóúÊñáÊ™î',
    icon: 'BookOpen',
    color: '#dc2626',
    sortOrder: 3
  },
  {
    name: 'administrative-forms',
    displayName: 'Ë°åÊîøË°®Ê†º',
    description: 'ÂêÑÈ°ûË°åÊîøÁî≥Ë´ãË°®Ê†º„ÄÅÂØ©Ê†∏Êñá‰ª∂',
    icon: 'FileText',
    color: '#7c3aed',
    sortOrder: 4
  },
  {
    name: 'policies-procedures',
    displayName: 'ÊîøÁ≠ñÁ®ãÂ∫è',
    description: 'Â≠∏Ê†°ÊîøÁ≠ñ„ÄÅ‰ΩúÊ•≠Á®ãÂ∫è„ÄÅË¶èÁ´†Âà∂Â∫¶',
    icon: 'Shield',
    color: '#ea580c',
    sortOrder: 5
  },
  {
    name: 'student-resources',
    displayName: 'Â≠∏ÁîüË≥áÊ∫ê',
    description: 'Â≠∏ÁîüÊâãÂÜä„ÄÅÊåáÂ∞éË≥áÊñô„ÄÅÁî≥Ë´ãË≥áÊ∫ê',
    icon: 'Users',
    color: '#0891b2',
    sortOrder: 6
  }
]

async function main() {
  console.log('üöÄ Starting department categories initialization...')

  try {
    // Check if categories already exist
    const existingCategories = await prisma.resourceCategory.findMany({
      where: {
        name: {
          in: departmentCategories.map(cat => cat.name)
        }
      }
    })

    const existingNames = new Set(existingCategories.map(cat => cat.name))
    const newCategories = departmentCategories.filter(cat => !existingNames.has(cat.name))

    if (newCategories.length === 0) {
      console.log('‚úÖ All department categories already exist')
      return
    }

    console.log(`üìÇ Creating ${newCategories.length} new categories...`)

    // Create new categories
    for (const category of newCategories) {
      const created = await prisma.resourceCategory.create({
        data: {
          ...category,
          isActive: true
        }
      })
      console.log(`‚úÖ Created: ${created.displayName} (${created.name})`)
    }

    console.log('üéâ Department categories initialization completed!')

    // Display summary
    const allCategories = await prisma.resourceCategory.findMany({
      orderBy: { sortOrder: 'asc' },
      include: {
        resources: true
      }
    })

    console.log('\nüìä Current Categories Summary:')
    allCategories.forEach(cat => {
      console.log(`  ‚Ä¢ ${cat.displayName} (${cat.resources.length} resources)`)
    })

  } catch (error) {
    console.error('‚ùå Error initializing department categories:', error)
    process.exit(1)
  } finally {
    await prisma.$disconnect()
  }
}

main()