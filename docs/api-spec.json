{
  "openapi": "3.0.0",
  "info": {
    "title": "KCISLK ESID Info Hub API",
    "version": "1.0.0",
    "description": "Comprehensive API for KCISLK Elementary School International Department Information Hub"
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Main server"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique user identifier"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "User email address"
          },
          "displayName": {
            "type": "string",
            "description": "User display name"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp"
          }
        },
        "required": [
          "id",
          "email",
          "displayName"
        ]
      },
      "Announcement": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique announcement identifier"
          },
          "title": {
            "type": "string",
            "description": "Announcement title"
          },
          "content": {
            "type": "string",
            "description": "Announcement content"
          },
          "isPublished": {
            "type": "boolean",
            "description": "Publication status"
          },
          "createdBy": {
            "type": "string",
            "description": "Creator user ID"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "title",
          "content",
          "createdBy"
        ]
      },
      "Event": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique event identifier"
          },
          "title": {
            "type": "string",
            "description": "Event title"
          },
          "description": {
            "type": "string",
            "description": "Event description"
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "description": "Event start time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "description": "Event end time"
          },
          "location": {
            "type": "string",
            "description": "Event location"
          },
          "createdBy": {
            "type": "string",
            "description": "Creator user ID"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "title",
          "startDate",
          "createdBy"
        ]
      },
      "Resource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique resource identifier"
          },
          "title": {
            "type": "string",
            "description": "Resource title"
          },
          "description": {
            "type": "string",
            "description": "Resource description"
          },
          "fileUrl": {
            "type": "string",
            "description": "Resource file URL"
          },
          "categoryId": {
            "type": "string",
            "description": "Resource category ID"
          },
          "gradeLevelId": {
            "type": "string",
            "description": "Grade level ID"
          },
          "isPublished": {
            "type": "boolean",
            "description": "Publication status"
          },
          "createdBy": {
            "type": "string",
            "description": "Creator user ID"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "title",
          "categoryId",
          "createdBy"
        ]
      },
      "Notification": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique notification identifier"
          },
          "recipientId": {
            "type": "string",
            "description": "Recipient user ID"
          },
          "title": {
            "type": "string",
            "description": "Notification title"
          },
          "message": {
            "type": "string",
            "description": "Notification message"
          },
          "type": {
            "type": "string",
            "enum": [
              "info",
              "warning",
              "error",
              "success"
            ]
          },
          "isRead": {
            "type": "boolean",
            "description": "Read status"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "recipientId",
          "title",
          "message",
          "type"
        ]
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "error": {
            "type": "string",
            "description": "Error message"
          },
          "code": {
            "type": "string",
            "description": "Error code"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "success",
          "error"
        ]
      },
      "SuccessResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "object",
            "description": "Response data"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "success"
        ]
      },
      "PaginatedResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "pagination": {
            "type": "object",
            "properties": {
              "page": {
                "type": "number",
                "description": "Current page number"
              },
              "limit": {
                "type": "number",
                "description": "Items per page"
              },
              "total": {
                "type": "number",
                "description": "Total number of items"
              },
              "pages": {
                "type": "number",
                "description": "Total number of pages"
              }
            }
          }
        }
      }
    }
  },
  "paths": {
    "/api/health": {
      "get": {
        "summary": "System health check endpoint",
        "tags": [
          "System"
        ],
        "security": [],
        "parameters": [],
        "responses": {
          "200": {
            "description": "System is healthy",
            "content": {
              "application/json": {
                "example": {
                  "status": "healthy",
                  "timestamp": "2025-09-03T16:00:00Z"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/google": {
      "get": {
        "summary": "Initialize Google OAuth authentication",
        "tags": [
          "Authentication"
        ],
        "security": [],
        "parameters": [],
        "responses": {
          "302": {
            "description": "Redirect to Google OAuth"
          }
        }
      }
    },
    "/api/auth/callback": {
      "get": {
        "summary": "Handle OAuth callback from Google",
        "tags": [
          "Authentication"
        ],
        "security": [],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "state",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "302": {
            "description": "Redirect after successful authentication"
          },
          "400": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "example": {
                  "error": "Invalid authorization code"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/users": {
      "get": {
        "summary": "Get all users with pagination and filtering",
        "tags": [
          "User Management"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "role",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of users",
            "content": {
              "application/json": {
                "example": {
                  "users": [
                    {
                      "id": "user_123",
                      "email": "user@example.com",
                      "displayName": "John Doe",
                      "roles": [
                        "viewer"
                      ]
                    }
                  ],
                  "pagination": {
                    "page": 1,
                    "limit": 20,
                    "total": 100
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new user",
        "tags": [
          "User Management"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "string (required)"
                  },
                  "displayName": {
                    "type": "string",
                    "description": "string (required)"
                  },
                  "role": {
                    "type": "string",
                    "description": "string (optional)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "example": {
                  "success": true,
                  "user": {
                    "id": "user_124",
                    "email": "newuser@example.com",
                    "displayName": "Jane Doe"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/users/[id]": {
      "get": {
        "summary": "Get user by ID",
        "tags": [
          "User Management"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User details"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "summary": "Update user information",
        "tags": [
          "User Management"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "displayName": {
                    "type": "string",
                    "description": "string (optional)"
                  },
                  "email": {
                    "type": "string",
                    "description": "string (optional)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "summary": "Delete user",
        "tags": [
          "User Management"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/api/admin/users/[id]/upgrade-request": {
      "post": {
        "summary": "Request permission upgrade for user",
        "tags": [
          "Permission Management"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "requestedRole": {
                    "type": "string",
                    "description": "string"
                  },
                  "justification": {
                    "type": "string",
                    "description": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Upgrade request created"
          }
        }
      }
    },
    "/api/admin/upgrade-requests": {
      "get": {
        "summary": "Get all permission upgrade requests",
        "tags": [
          "Permission Management"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "List of upgrade requests"
          }
        }
      }
    },
    "/api/announcements": {
      "get": {
        "summary": "Get published announcements",
        "tags": [
          "Announcements"
        ],
        "security": [],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of announcements"
          }
        }
      }
    },
    "/api/admin/announcements": {
      "get": {
        "summary": "Get all announcements (including drafts)",
        "tags": [
          "Announcements"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "List of all announcements"
          }
        }
      },
      "post": {
        "summary": "Create new announcement",
        "tags": [
          "Announcements"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "string (required)"
                  },
                  "content": {
                    "type": "string",
                    "description": "string (required)"
                  },
                  "isPublished": {
                    "type": "string",
                    "description": "boolean (optional)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Announcement created"
          }
        }
      }
    },
    "/api/events": {
      "get": {
        "summary": "Get published events",
        "tags": [
          "Events"
        ],
        "security": [],
        "parameters": [],
        "responses": {
          "200": {
            "description": "List of events"
          }
        }
      }
    },
    "/api/admin/events": {
      "get": {
        "summary": "Get all events (admin view)",
        "tags": [
          "Events"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "List of all events"
          }
        }
      },
      "post": {
        "summary": "Create new event",
        "tags": [
          "Events"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "string (required)"
                  },
                  "description": {
                    "type": "string",
                    "description": "string (required)"
                  },
                  "startDate": {
                    "type": "string",
                    "description": "string (ISO date)"
                  },
                  "endDate": {
                    "type": "string",
                    "description": "string (ISO date)"
                  },
                  "location": {
                    "type": "string",
                    "description": "string (optional)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Event created"
          }
        }
      }
    },
    "/api/events/[id]/register": {
      "post": {
        "summary": "Register for an event",
        "tags": [
          "Events"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Registration successful"
          },
          "409": {
            "description": "Already registered"
          }
        }
      }
    },
    "/api/resources": {
      "get": {
        "summary": "Get published resources",
        "tags": [
          "Resources"
        ],
        "security": [],
        "parameters": [
          {
            "name": "category",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "gradeLevel",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of resources"
          }
        }
      }
    },
    "/api/admin/resources": {
      "get": {
        "summary": "Get all resources (admin view)",
        "tags": [
          "Resources"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "List of all resources"
          }
        }
      },
      "post": {
        "summary": "Create new resource",
        "tags": [
          "Resources"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "string (required)"
                  },
                  "description": {
                    "type": "string",
                    "description": "string (required)"
                  },
                  "categoryId": {
                    "type": "string",
                    "description": "string (required)"
                  },
                  "gradeLevelId": {
                    "type": "string",
                    "description": "string (optional)"
                  },
                  "fileUrl": {
                    "type": "string",
                    "description": "string (optional)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Resource created"
          }
        }
      }
    },
    "/api/admin/resources/analytics": {
      "get": {
        "summary": "Get resource analytics and statistics",
        "tags": [
          "Resources"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Resource analytics data"
          }
        }
      }
    },
    "/api/notifications": {
      "get": {
        "summary": "Get user notifications",
        "tags": [
          "Notifications"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "List of notifications"
          }
        }
      }
    },
    "/api/notifications/stream": {
      "get": {
        "summary": "Real-time notification stream (SSE)",
        "tags": [
          "Notifications"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Server-sent events stream"
          }
        }
      }
    },
    "/api/notifications/stats": {
      "get": {
        "summary": "Get notification statistics",
        "tags": [
          "Notifications"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Notification statistics"
          }
        }
      }
    }
  }
}